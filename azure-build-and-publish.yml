# This template is referenced in the repositories for various WWT guides to
# define their CI/CD mechanism. Note that while the guides include this
# repository as a Git submodule, Azure Pipelines doesn't support that, so it
# is possible that the version of this file used by Pipelines won't be in sync
# with what the guide repository expects.
#
# This pipeline has to run on Windows in order to take advantage of the
# AzureFileCopy task.

parameters:
- name: 'azureServiceConnectionName'
  type: string
- name: 'cdnProfileName'
  type: string
- name: 'cdnPubPrefix'
  type: string
- name: 'cdnEndpointName'
  type: string
- name: 'cdnResourceGroupName'
  type: string
- name: 'containerName'
  default: '$web'
  type: string
- name: 'pubPrefix'
  type: string
- name: 'storageAccountName'
  type: string
- name: 'vmImage'
  default: 'windows-latest'
  type: string
- name: 'zolaVersion'
  default: '0.10.1'
  type: string

jobs:
- job: BuildAndPublish
  pool:
    vmImage: ${{ parameters.vmImage }}
  steps:

  - checkout: self
    submodules: recursive

  - powershell: |
      $u = 'https://github.com/getzola/zola/releases/download/v${{ parameters.zolaVersion }}/zola-v${{ parameters.zolaVersion }}-x86_64-pc-windows-msvc.zip'
      Invoke-WebRequest -Uri $u -OutFile zola.zip

      Add-Type -assembly "System.IO.Compression.Filesystem";
      [IO.Compression.Zipfile]::ExtractToDirectory("zola.zip", ".");
    displayName: Install Zola

  - powershell: |
      .\zola.exe build -o $(build.artifactStagingDirectory)
    displayName: Build site

  - task: PublishPipelineArtifact@0
    displayName: Publish site as artifact
    inputs:
      artifactName: static-site
      targetPath: $(Build.ArtifactStagingDirectory)

  - task: AzureFileCopy@3
    displayName: Upload to Azure Storage
    inputs:
      SourcePath: '$(build.artifactStagingDirectory)'
      azureSubscription: ${{ parameters.azureServiceConnectionName }}
      Destination: 'AzureBlob'
      storage: ${{ parameters.storageAccountName }}
      ContainerName: ${{ parameters.containerName }}
      blobPrefix: ${{ parameters.pubPrefix }}

  - task: AzurePowerShell@4
    displayName: Purge CDN
    inputs:
      azureSubscription: ${{ parameters.azureServiceConnectionName }}
      azurePowerShellVersion: 'LatestVersion'
      scriptType: 'inlineScript'
      inline: |
        Unpublish-AzCdnEndpointContent `
          -ProfileName ${{ parameters.cdnProfileName }} `
          -ResourceGroupName ${{ parameters.cdnResourceGroupName }} `
          -EndpointName ${{ parameters.cdnEndpointName }} `
          -PurgeContent '${{ parameters.cdnPubPrefix }}/*'
